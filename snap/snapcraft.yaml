name: polkadot
base: core22
adopt-info: polkadot
summary: Polkadot - A multi-chain framework for better blockchain interoperability
contact: polkadot-devel@dwellir.com
issues: https://github.com/dwellir-public/snap-polkadot/issues
source-code: https://github.com/dwellir-public/snap-polkadot/
website: https://www.dwellir.com
grade: stable
confinement: strict

architectures:
  - amd64
  - arm64

description: |
  Polkadot is a multi-chain framework that enables interoperability and scalability for multiple blockchains.
  See: https://github.com/paritytech/polkadot-sdk

  Maintained by Dwellir https://www.dwellir.com

  Supported configuration options for the snap:
  
  service-args [default=--base-path=$SNAP_COMMON/polkadot_base --name=<hostname>]
  For available arguemnts see https://github.com/paritytech/polkadot-sdk
  The value set here will be passed to the Polkadot binary with a few exceptions listed below. 
  * --name defaults to the systems hostname the first time the snap is installed.
  * --base-path is always set by the snap to `$SNAP_COMMON/polkadot_base` and is not allowed to be configured.
  * --wasm-runtime-overrides is set when tracing is enabled and is not allowed to be configured.
  * --rpc-methods is not allowed to be set if tracing is enabled since tracing required the value to be true.

  tracing-enabled [default=false]
  If true tracing will be enabled on the Polkadot service. This means that service args --wasm-runtime-overrides will be set and point to the correct runtime overrides based on the running chain and that --rpc-methods will be set to true.
  Is not allowed to be enabled if --rpc-methods is set in service-args since it needs to be true for tracing to work.

  Start the service with 'sudo snap start polkadot'

  Check logs from the Polkadot service with 'snap logs polkadot -f'

parts:

  install-wasm-toolchain:
    plugin: nil
    override-build: |
      rustup default stable
      rustup target add wasm32-unknown-unknown
      rustup update
      cargo install wasm-pack --version 0.11.1

  polkadot:
    after: [install-wasm-toolchain]
    plugin: rust
    source: https://github.com/paritytech/polkadot.git
    source-tag: v1.0.0
    source-depth: 1
    build-environment:
      - CARGO_PROFILE_RELEASE_BUILD_OVERRIDE: "--release"
      - RUSTUP_TOOLCHAIN: stable
      - RUSTUP_TARGET: wasm32-unknown-unknown
    build-packages:
      - build-essential
      - libssl-dev
      - git 
      - clang 
      - libclang-dev 
      - pkg-config
      - protobuf-compiler
      # -curl      
    build-snaps:
      - rustup
    # Make the commit hash available for snap info
    override-pull: |
      craftctl default
      craftctl set version="$(git describe --tags --abbrev=10)-$(git rev-parse --short HEAD)"
    override-build: |
      # TODO according to the readme in the polkadot repo init.sh plus build-packages should be enough before building but we need the steps in install-wasm-toolchain as well for some reason.
      ./scripts/init.sh
      # Build main binary using default function of plugin (like calling super)
      craftctl default
      # Building wasm runtime binaries with tracing capabilities
      cargo build --release --features frame-executive/with-tracing,sp-io/with-tracing --manifest-path runtime/westend/Cargo.toml
      cargo build --release --features frame-executive/with-tracing,sp-io/with-tracing --manifest-path runtime/rococo/Cargo.toml
      cargo build --release --features frame-executive/with-tracing,sp-io/with-tracing --manifest-path runtime/polkadot/Cargo.toml
      cargo build --release --features frame-executive/with-tracing,sp-io/with-tracing --manifest-path runtime/kusama/Cargo.toml
      mkdir -p ${CRAFT_PART_INSTALL}/{westend-runtime-with-traces,rococo-runtime-with-traces,polkadot-runtime-with-traces,kusama-runtime-with-traces}
      # Use compact.compressed version of wasm runtimes. All versions seems to work and this one is smallest in size.
      cp target/release/wbuild/westend-runtime/westend_runtime.compact.compressed.wasm ${CRAFT_PART_INSTALL}/westend-runtime-with-traces/
      cp target/release/wbuild/rococo-runtime/rococo_runtime.compact.compressed.wasm ${CRAFT_PART_INSTALL}/rococo-runtime-with-traces/
      cp target/release/wbuild/polkadot-runtime/polkadot_runtime.compact.compressed.wasm ${CRAFT_PART_INSTALL}/polkadot-runtime-with-traces/
      cp target/release/wbuild/kusama-runtime/kusama_runtime.compact.compressed.wasm ${CRAFT_PART_INSTALL}/kusama-runtime-with-traces/
    prime:
      - bin/polkadot
      - westend-runtime-with-traces/
      - rococo-runtime-with-traces/
      - polkadot-runtime-with-traces/
      - kusama-runtime-with-traces/

  wrappers:
    plugin: dump
    source-type: local
    source: .
    stage:
      - wrappers/
  
  utils:
      plugin: dump
      source-type: local
      source: .
      stage:
        - utils/

apps:
  polkadot:
    command: wrappers/start-polkadot.sh
    daemon: simple
    install-mode: disable
    refresh-mode: endure
    restart-condition: never
    plugs:
      - network
      - network-bind
    environment:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
